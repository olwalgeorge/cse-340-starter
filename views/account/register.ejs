<% if (title) { %>
  <h1><%= title %></h1>
<% } else {res.redirect('/')} %>

<%- messages() %>

<% if (errors) { %>
  <div class="error-messages" role="alert" aria-live="polite">
    <h2>Please correct the following errors:</h2>
    <ul class="error-list">
      <% errors.array().forEach(error => { %>
        <li><%= error.msg %></li>
      <%})%>
    </ul>
  </div>
<% } %>

<div class="form-container">
  <form id="registrationForm" action="/account/register" method="post" novalidate>
    <fieldset>
      <legend>Create Your Account</legend>
      
      <div class="form-group">
        <label for="accountFirstname">
          First Name <span class="required" aria-label="required">*</span>
        </label>
        <input 
          type="text" 
          name="account_firstname" 
          id="accountFirstname" 
          required 
          autocomplete="given-name"
          aria-describedby="firstname-help"
          value="<%= locals.account_firstname || '' %>"
          placeholder="Enter your first name"
        >
        <small id="firstname-help" class="help-text">Your first name (minimum 1 character)</small>
      </div>
      
      <div class="form-group">
        <label for="accountLastname">
          Last Name <span class="required" aria-label="required">*</span>
        </label>
        <input 
          type="text" 
          name="account_lastname" 
          id="accountLastname" 
          required 
          autocomplete="family-name"
          aria-describedby="lastname-help"
          value="<%= locals.account_lastname || '' %>"
          placeholder="Enter your last name"
        >
        <small id="lastname-help" class="help-text">Your last name (minimum 2 characters)</small>
      </div>
      
      <div class="form-group">
        <label for="accountEmail">
          Email Address <span class="required" aria-label="required">*</span>
        </label>
        <input 
          type="email" 
          name="account_email" 
          id="accountEmail" 
          required 
          autocomplete="email"
          aria-describedby="email-help"
          value="<%= locals.account_email || '' %>"
          placeholder="Enter your email address"
        >
        <small id="email-help" class="help-text">We'll use this for login and important notifications</small>
      </div>
      
      <div class="form-group">
        <label for="accountPassword">
          Password <span class="required" aria-label="required">*</span>
        </label>
        <div class="password-wrapper">          <input 
            type="password" 
            name="account_password" 
            id="accountPassword" 
            required 
            autocomplete="new-password"
            aria-describedby="password-requirements"
            placeholder="Create a strong password"
          >
          <button type="button" class="password-toggle" aria-label="Show password">
            <span class="show-text">üëÅÔ∏è</span>
            <span class="hide-text" style="display: none;">üôà</span>
          </button>
        </div>
        <div id="password-requirements" class="password-requirements">
          <p>Password must contain:</p>
          <ul>
            <li id="length-check">At least 12 characters</li>
            <li id="lowercase-check">At least 1 lowercase letter (a-z)</li>
            <li id="uppercase-check">At least 1 uppercase letter (A-Z)</li>
            <li id="number-check">At least 1 number (0-9)</li>
            <li id="symbol-check">At least 1 special character (!@#$%^&*)</li>
          </ul>
        </div>
      </div>
      
      <div class="form-group">
        <button type="submit" class="btn btn-primary">
          <span class="btn-text">Create Account</span>
          <span class="btn-loading" style="display: none;">Creating...</span>
        </button>
      </div>
    </fieldset>
  </form>  
  <div class="form-footer">
    <p>Already have an account? <a href="/account/login" class="link-secondary">Sign in here</a></p>
    <div class="form-divider">
      <span>or</span>
    </div>    <div class="social-login">
      <p class="social-text">Sign up with:</p>
      <div class="social-buttons">
        <button type="button" class="btn btn-social btn-google" onclick="signUpWithGoogle()">
          <span class="social-icon">
            <svg viewBox="0 0 24 24" aria-hidden="true">
              <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
              <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
              <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
              <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
            </svg>
          </span>
          <span class="social-main-text">Continue with Google</span>
          <span class="coming-soon-badge">Coming Soon</span>
        </button>
        <button type="button" class="btn btn-social btn-facebook" onclick="signUpWithFacebook()">
          <span class="social-icon">
            <svg viewBox="0 0 24 24" aria-hidden="true">
              <path fill="currentColor" d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </span>
          <span class="social-main-text">Continue with Facebook</span>
          <span class="coming-soon-badge">Coming Soon</span>
        </button>
        <button type="button" class="btn btn-social btn-github" onclick="signUpWithGitHub()">
          <span class="social-icon">
            <svg viewBox="0 0 24 24" aria-hidden="true">
              <path fill="currentColor" d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </span>
          <span class="social-main-text">Continue with GitHub</span>
          <span class="coming-soon-badge">Coming Soon</span>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Password visibility toggle
  const passwordInput = document.getElementById('accountPassword');
  const toggleButton = document.querySelector('.password-toggle');
  const showText = toggleButton.querySelector('.show-text');
  const hideText = toggleButton.querySelector('.hide-text');
  
  toggleButton.addEventListener('click', function() {
    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      showText.style.display = 'none';
      hideText.style.display = 'inline';
      toggleButton.setAttribute('aria-label', 'Hide password');
    } else {
      passwordInput.type = 'password';
      showText.style.display = 'inline';
      hideText.style.display = 'none';
      toggleButton.setAttribute('aria-label', 'Show password');
    }
  });
  
  // Real-time password validation
  passwordInput.addEventListener('input', function() {
    const password = this.value;
    const checks = {
      'length-check': password.length >= 12,
      'lowercase-check': /[a-z]/.test(password),
      'uppercase-check': /[A-Z]/.test(password),
      'number-check': /[0-9]/.test(password),
      'symbol-check': /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password)
    };
    
    Object.keys(checks).forEach(checkId => {
      const element = document.getElementById(checkId);
      if (checks[checkId]) {
        element.classList.add('valid');
        element.classList.remove('invalid');
      } else {
        element.classList.add('invalid');
        element.classList.remove('valid');
      }
    });
  });
  
  // Form submission loading state
  const form = document.getElementById('registrationForm');
  const submitBtn = form.querySelector('button[type="submit"]');
  const btnText = submitBtn.querySelector('.btn-text');
  const btnLoading = submitBtn.querySelector('.btn-loading');
  
  form.addEventListener('submit', function() {
    submitBtn.disabled = true;
    btnText.style.display = 'none';
    btnLoading.style.display = 'inline';
  });
  
  // Clear loading state if form has errors (page reload)
  if (document.querySelector('.error-messages')) {
    submitBtn.disabled = false;
    btnText.style.display = 'inline';
    btnLoading.style.display = 'none';
  }
});

// Social Authentication Functions for Registration
function signUpWithGoogle() {
  console.log('Google sign-up clicked');
  // TODO: Implement Google OAuth registration
  showSocialSignUpMessage('Google');
}

function signUpWithFacebook() {
  console.log('Facebook sign-up clicked');
  // TODO: Implement Facebook OAuth registration
  showSocialSignUpMessage('Facebook');
}

function signUpWithGitHub() {
  console.log('GitHub sign-up clicked');
  // TODO: Implement GitHub OAuth registration
  showSocialSignUpMessage('GitHub');
}

function showSocialSignUpMessage(provider) {
  const message = document.createElement('div');
  message.className = 'flash-message info';
  message.innerHTML = `
    <span>‚ÑπÔ∏è</span>
    <span>${provider} registration is not yet configured. Please use the registration form for now.</span>
  `;
  
  const container = document.querySelector('.form-container');
  container.insertBefore(message, container.firstChild);
  
  // Remove message after 5 seconds
  setTimeout(() => {
    if (message.parentNode) {
      message.remove();
    }
  }, 5000);
}

function setSocialButtonLoading(button, isLoading) {
  if (isLoading) {
    button.classList.add('loading');
    button.disabled = true;
  } else {
    button.classList.remove('loading');
    button.disabled = false;
  }
}
</script>
